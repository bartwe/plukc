//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Compiler {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Compiler.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous constructor reference to &apos;{0}&apos;..
        /// </summary>
        public static string AmbiguousConstructorReference {
            get {
                return ResourceManager.GetString("AmbiguousConstructorReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous reference to method named &apos;{0}&apos;..
        /// </summary>
        public static string AmbiguousMethodReference {
            get {
                return ResourceManager.GetString("AmbiguousMethodReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Statement body not compatible with modifiers..
        /// </summary>
        public static string BodyNotCompatibleWithModifier {
            get {
                return ResourceManager.GetString("BodyNotCompatibleWithModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable &apos;{0}&apos; is read only and cannot be assigned..
        /// </summary>
        public static string CannotAssignReadOnlyVar {
            get {
                return ResourceManager.GetString("CannotAssignReadOnlyVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create instance of abstract class &apos;{0}&apos;..
        /// </summary>
        public static string CannotCreateInstanceOfAbstractClass {
            get {
                return ResourceManager.GetString("CannotCreateInstanceOfAbstractClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use a type as a value..
        /// </summary>
        public static string CannotUseATypeAsAValue {
            get {
                return ResourceManager.GetString("CannotUseATypeAsAValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use expression of type &apos;{0}&apos; as a function..
        /// </summary>
        public static string CannotUseExpressionOfTypeAsFunction {
            get {
                return ResourceManager.GetString("CannotUseExpressionOfTypeAsFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create new object of type &apos;{0}&apos;..
        /// </summary>
        public static string CanOnlyCreateNewInstanceOfClass {
            get {
                return ResourceManager.GetString("CanOnlyCreateNewInstanceOfClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only use the scope statement on a value of a notnull class implementing Disposable..
        /// </summary>
        public static string CanOnlyUseScopeOnNotNullDisposable {
            get {
                return ResourceManager.GetString("CanOnlyUseScopeOnNotNullDisposable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only use a &apos;var&apos; declaration when the type can be inferred..
        /// </summary>
        public static string CanOnlyUseVarWithInitialization {
            get {
                return ResourceManager.GetString("CanOnlyUseVarWithInitialization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only use the with statement on a value of a notnull class type..
        /// </summary>
        public static string CanOnlyUseWithOnNotNullClassInstances {
            get {
                return ResourceManager.GetString("CanOnlyUseWithOnNotNullClassInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; does not seem to be a program..
        /// </summary>
        public static string ClassHasNoMain {
            get {
                return ResourceManager.GetString("ClassHasNoMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} [-p PATH]... CLASS....
        /// </summary>
        public static string CompilerUsage {
            get {
                return ResourceManager.GetString("CompilerUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An confliciting or ambiguous constructor reference to &quot;{1}&quot;, make explicit..
        /// </summary>
        public static string ConflictingConstructor {
            get {
                return ResourceManager.GetString("ConflictingConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not determine type of var parameter..
        /// </summary>
        public static string CouldNotDetermineTypeOfForVar {
            get {
                return ResourceManager.GetString("CouldNotDetermineTypeOfForVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate import of namespace &apos;{0}&apos;..
        /// </summary>
        public static string DuplicateImport {
            get {
                return ResourceManager.GetString("DuplicateImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression has no effect..
        /// </summary>
        public static string ExpressionHasNoEffect {
            get {
                return ResourceManager.GetString("ExpressionHasNoEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No field named &apos;{0}&apos; was found on type &apos;{1}&apos;..
        /// </summary>
        public static string FailedToResolveFieldExpression {
            get {
                return ResourceManager.GetString("FailedToResolveFieldExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No static field named &apos;{0}&apos; was found on type &apos;{1}&apos;..
        /// </summary>
        public static string FailedToResolveStaticFieldExpression {
            get {
                return ResourceManager.GetString("FailedToResolveStaticFieldExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No variable named &apos;{0}&apos; was found..
        /// </summary>
        public static string FailedToResolveVariable {
            get {
                return ResourceManager.GetString("FailedToResolveVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{1}&apos; is nullable and taking field &apos;{0}&apos; may cause an error..
        /// </summary>
        public static string FieldFromNullableType {
            get {
                return ResourceManager.GetString("FieldFromNullableType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collision while inheriting a field named &apos;{0}&apos;..
        /// </summary>
        public static string FieldNameCollision {
            get {
                return ResourceManager.GetString("FieldNameCollision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field  &apos;{0}&apos; has not been assigned..
        /// </summary>
        public static string FieldNotAssigned {
            get {
                return ResourceManager.GetString("FieldNotAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field &apos;{0}&apos; is not visible from this context..
        /// </summary>
        public static string FieldNotVisible {
            get {
                return ResourceManager.GetString("FieldNotVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A field with name &apos;{0}&apos; has already been defined..
        /// </summary>
        public static string FieldWithNameAlreadyDefiniedOnClass {
            get {
                return ResourceManager.GetString("FieldWithNameAlreadyDefiniedOnClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call &apos;{0}&apos; expected, found {1} count arguments..
        /// </summary>
        public static string FunctionCallParameterCountMismatch {
            get {
                return ResourceManager.GetString("FunctionCallParameterCountMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getter &apos;{0}&apos; is not visible from this context..
        /// </summary>
        public static string GetPropertyNotVisible {
            get {
                return ResourceManager.GetString("GetPropertyNotVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If branch is empty..
        /// </summary>
        public static string IfBranchIsEmpty {
            get {
                return ResourceManager.GetString("IfBranchIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to resolve implicit base construcor reference..
        /// </summary>
        public static string ImplicitConstructor {
            get {
                return ResourceManager.GetString("ImplicitConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicit field property requires both getter and setter..
        /// </summary>
        public static string ImplicitFieldPropertyRequiresBothGetterAndSetter {
            get {
                return ResourceManager.GetString("ImplicitFieldPropertyRequiresBothGetterAndSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incompatible types, could not convert from &apos;{1}&apos; to &apos;{0}&apos;..
        /// </summary>
        public static string IncompatibleTypes {
            get {
                return ResourceManager.GetString("IncompatibleTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left expression cannot be assigned to..
        /// </summary>
        public static string LeftHandSideCannotBeAssignedTo {
            get {
                return ResourceManager.GetString("LeftHandSideCannotBeAssignedTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loop statement has no body..
        /// </summary>
        public static string LoopStatementHasNoBody {
            get {
                return ResourceManager.GetString("LoopStatementHasNoBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abstract method &apos;{0}&apos; not implemented by type &apos;{1}&apos;..
        /// </summary>
        public static string MethodIsAbstract {
            get {
                return ResourceManager.GetString("MethodIsAbstract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No method named &apos;{0}&apos; is visible from this context..
        /// </summary>
        public static string MethodNotVisible {
            get {
                return ResourceManager.GetString("MethodNotVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; on type &apos;{1}&apos; is marked as override but returntype does not match..
        /// </summary>
        public static string MethodOverrideReturnTypeMismatch {
            get {
                return ResourceManager.GetString("MethodOverrideReturnTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing override keyword for method &apos;{0}&apos; on type &apos;{1}&apos;..
        /// </summary>
        public static string MissingMethodOverride {
            get {
                return ResourceManager.GetString("MissingMethodOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; on type &apos;{1}&apos; is marked as override, but no such method on inherited types..
        /// </summary>
        public static string MissingMethodOverrideTarget {
            get {
                return ResourceManager.GetString("MissingMethodOverrideTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing override keyword for property &apos;{0}&apos; on type &apos;{1}&apos;..
        /// </summary>
        public static string MissingPropertyOverride {
            get {
                return ResourceManager.GetString("MissingPropertyOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property &apos;{0}&apos; on type &apos;{1}&apos; is marked as override, but no such property on inherited types..
        /// </summary>
        public static string MissingPropertyOverrideTarget {
            get {
                return ResourceManager.GetString("MissingPropertyOverrideTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No definition found for type: &apos;{0}&apos;..
        /// </summary>
        public static string NoDefinitionForType {
            get {
                return ResourceManager.GetString("NoDefinitionForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No enclosing loop to leave..
        /// </summary>
        public static string NoEnclosingLoop {
            get {
                return ResourceManager.GetString("NoEnclosingLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No matching constructor found for &apos;{0}&apos;..
        /// </summary>
        public static string NoMatchingConstructor {
            get {
                return ResourceManager.GetString("NoMatchingConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No matching constructor found for &apos;{0}&apos; with signature &apos;{1}&apos;.
        /// </summary>
        public static string NoMatchingConstructorSignature {
            get {
                return ResourceManager.GetString("NoMatchingConstructorSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No matching method found named &apos;{0}&apos;.
        /// </summary>
        public static string NoMatchingMethod {
            get {
                return ResourceManager.GetString("NoMatchingMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument mismatch on method named &apos;{0}&apos;..
        /// </summary>
        public static string NoMatchingMethodMultiple {
            get {
                return ResourceManager.GetString("NoMatchingMethodMultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument mismatch on method named &apos;{0}&apos;, expected &apos;{1}&apos;..
        /// </summary>
        public static string NoMatchingMethodOption {
            get {
                return ResourceManager.GetString("NoMatchingMethodOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not all codepaths return a value..
        /// </summary>
        public static string NotAllCodePathsReturnAValue {
            get {
                return ResourceManager.GetString("NotAllCodePathsReturnAValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No visible constructor found for &apos;{0}&apos;..
        /// </summary>
        public static string NoVisibleConstructor {
            get {
                return ResourceManager.GetString("NoVisibleConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No visible method found named &apos;{0}&apos;..
        /// </summary>
        public static string NoVisibleMethod {
            get {
                return ResourceManager.GetString("NoVisibleMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object is not fully constructed, method calls on the object and passing &apos;this&apos; is not allowed..
        /// </summary>
        public static string ObjectNotFullyAssigned {
            get {
                return ResourceManager.GetString("ObjectNotFullyAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; is not fully constructed, field &apos;{1}&apos; is not assigned..
        /// </summary>
        public static string ObjectNotFullyAssignedConstructor {
            get {
                return ResourceManager.GetString("ObjectNotFullyAssignedConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property &apos;{0}&apos; on type &apos;{1}&apos; is abstract..
        /// </summary>
        public static string PropertyIsAbstract {
            get {
                return ResourceManager.GetString("PropertyIsAbstract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require.Assigned.
        /// </summary>
        public static string RequireAssigned {
            get {
                return ResourceManager.GetString("RequireAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require.False.
        /// </summary>
        public static string RequireFalse {
            get {
                return ResourceManager.GetString("RequireFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require.NotEmpty.
        /// </summary>
        public static string RequireNotEmpty {
            get {
                return ResourceManager.GetString("RequireNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require.True.
        /// </summary>
        public static string RequireTrue {
            get {
                return ResourceManager.GetString("RequireTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Require.Unassigned.
        /// </summary>
        public static string RequireUnassigned {
            get {
                return ResourceManager.GetString("RequireUnassigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A return statement is not allowed here..
        /// </summary>
        public static string ReturnStatementNotAllowed {
            get {
                return ResourceManager.GetString("ReturnStatementNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setter &apos;{0}&apos; is not visible from this context..
        /// </summary>
        public static string SetPropertyNotVisible {
            get {
                return ResourceManager.GetString("SetPropertyNotVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modifier &apos;{0}&apos; is not allowed on a slot..
        /// </summary>
        public static string SlotModifierNotAllowed {
            get {
                return ResourceManager.GetString("SlotModifierNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template parameter mismatch &apos;{0}&apos; was found, expected &apos;{1}&apos;..
        /// </summary>
        public static string TemplateParameterMismatch {
            get {
                return ResourceManager.GetString("TemplateParameterMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type already declared &apos;{0}&apos;..
        /// </summary>
        public static string TypeAlreadyDeclared {
            get {
                return ResourceManager.GetString("TypeAlreadyDeclared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No default value for type &apos;{0}&apos;..
        /// </summary>
        public static string TypeHasNoDefaultValue {
            get {
                return ResourceManager.GetString("TypeHasNoDefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to infer the type of the expression from the context..
        /// </summary>
        public static string TypeOfExpressionUnclear {
            get {
                return ResourceManager.GetString("TypeOfExpressionUnclear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected token &apos;{0}&apos; was found, expected &quot;{1}&quot;..
        /// </summary>
        public static string UnexpectedToken {
            get {
                return ResourceManager.GetString("UnexpectedToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code is unreachable..
        /// </summary>
        public static string UnreachableCode {
            get {
                return ResourceManager.GetString("UnreachableCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jumping out of a try block is currently unsupported..
        /// </summary>
        public static string UnsupportedJumpOutOfTry {
            get {
                return ResourceManager.GetString("UnsupportedJumpOutOfTry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable &apos;{0}&apos; is unused..
        /// </summary>
        public static string UnusedVariable {
            get {
                return ResourceManager.GetString("UnusedVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable &apos;{0}&apos; has been assigned but never read..
        /// </summary>
        public static string VariableAssignedButUnused {
            get {
                return ResourceManager.GetString("VariableAssignedButUnused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable &apos;{0}&apos; might not be assigned..
        /// </summary>
        public static string VariableMightNotBeAssigned {
            get {
                return ResourceManager.GetString("VariableMightNotBeAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A variable with name &apos;{0}&apos; has already been defined..
        /// </summary>
        public static string VariableWithThatNameAlreadyDefined {
            get {
                return ResourceManager.GetString("VariableWithThatNameAlreadyDefined", resourceCulture);
            }
        }
    }
}
